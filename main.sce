function[] = main()

    // GUI related variables.
    global srcImg;
    global viewportSrcImg;
    global viewportResImg1;
    global viewportResImg2;
    global viewportResImg3;
    global viewportResImg4;
    global resImgName1;
    global resImgName2;
    global resImgName3;
    global resImgName4;
    global resPercentMatch1;
    global resPercentMatch2;
    global resPercentMatch3;
    global resPercentMatch4;
    global listboxSrcImg;
    global mainWin_handle;
    global is_eigenface_trained;
    global progState;
    global analysis_row0;
    global analysis_col0;
    global analysis_data;
    global analysisTable_handle;

    // Variables used for Eigenface training images.
    global numOfPerson;
    global imagesPerPerson;
    global numOfFaces;

    // Eigenface training images configurations
    numOfPerson     = 10;
    imagesPerPerson = 5;
    numOfFaces      = numOfPerson * imagesPerPerson;

    // General viewport configurations
    img_width  = 92;
    img_height = 112;

    is_eigenface_trained = "false";

    // Main window configurations
    mainWin_id     = 10001;
    mainWin_width  = 800;
    mainWin_height = 500;
    mainWin_pos_x  = 10;
    mainWin_pos_y  = 10;
    colorbits      = 8;

    // Main window's source image viewport configurations
    viewportSrcImg_width  = img_width/mainWin_width;
    viewportSrcImg_height = img_height/mainWin_height;
    viewportSrcImg_pos_x  = 10;
    viewportSrcImg_pos_y  = 10;

    // Main window's result image viewports 1
    viewportResImg1_width  = img_width/mainWin_width;
    viewportResImg1_height = img_height/mainWin_height;
    viewportResImg1_pos_x  = (mainWin_width/2)+10;
    viewportResImg1_pos_y  = 10;

    // Main window's result image viewports 2
    viewportResImg2_width  = img_width/mainWin_width;
    viewportResImg2_height = img_height/mainWin_height;
    viewportResImg2_pos_x  = (mainWin_width/2)+10;
    viewportResImg2_pos_y  = 20+(112*1);

    // Main window's result image viewports 3
    viewportResImg3_width  = img_width/mainWin_width;
    viewportResImg3_height = img_height/mainWin_height;
    viewportResImg3_pos_x  = (mainWin_width/2)+10;
    viewportResImg3_pos_y  = 30+(112*2);

    // Main window's result image viewports 4
    viewportResImg4_width  = img_width/mainWin_width;
    viewportResImg4_height = img_height/mainWin_height;
    viewportResImg4_pos_x  = (mainWin_width/2)+10;
    viewportResImg4_pos_y  = 40+(112*3);

    // Create Main Window
    mainWin_handle = scf(mainWin_id);
    mainWin_handle.color_map       = graycolormap(2^colorbits);
    mainWin_handle.background      = 255;
    mainWin_handle.figure_position = [mainWin_pos_x mainWin_pos_y];
    mainWin_handle.figure_name     = gettext("Face Recogntion");
    mainWin_handle.axes_size       = [mainWin_width, mainWin_height];

    // Create Main Window background
    mainWin_background = newaxes();
    mainWin_background.background  = 180;
    mainWin_background.margins     = [0 0 0 0];
    mainWin_background.axes_bounds = [0 0 1 1];

    // Create Main Window's source image viewport
    viewportSrcImg = newaxes();
    viewportSrcImg.background  = 128;
    viewportSrcImg.margins     = [0 0 0 0];
    viewportSrcImg.axes_bounds = [...
        viewportSrcImg_pos_x/mainWin_width, ...
        viewportSrcImg_pos_y/mainWin_height, ...
        viewportSrcImg_width, ...
        viewportSrcImg_height];

    // Create label for source image viewport
    uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Source Image", ...
        "fontsize", 12, ...
        "horizontalAlignment", "center", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.0 0.0 0.0], ...
        "position", [10+92 mainWin_height-30 288 20] );

    // Create Main Window's result image viewport 1
    viewportResImg1 = newaxes();
    viewportResImg1.background  = 128;
    viewportResImg1.margins     = [0 0 0 0];
    viewportResImg1.axes_bounds = [...
        viewportResImg1_pos_x/mainWin_width, ...
        viewportResImg1_pos_y/mainWin_height, ...
        viewportResImg1_width, ...
        viewportResImg1_height];

    // Create Main Window's result image viewport 2
    viewportResImg2 = newaxes();
    viewportResImg2.background  = 128;
    viewportResImg2.margins     = [0 0 0 0];
    viewportResImg2.axes_bounds = [ ...
        viewportResImg2_pos_x/mainWin_width, ...
        viewportResImg2_pos_y/mainWin_height, ...
        viewportResImg2_width, ...
        viewportResImg2_height];

    // Create Main Window's result image viewport 3
    viewportResImg3 = newaxes();
    viewportResImg3.background  = 128;
    viewportResImg3.margins     = [0 0 0 0];
    viewportResImg3.axes_bounds = [ ...
        viewportResImg3_pos_x/mainWin_width, ...
        viewportResImg3_pos_y/mainWin_height, ...
        viewportResImg3_width, ...
        viewportResImg3_height];

    // Create Main Window's result image viewport 4
    viewportResImg4 = newaxes();
    viewportResImg4.background  = 128;
    viewportResImg4.margins     = [0 0 0 0];
    viewportResImg4.axes_bounds = [ ...
        viewportResImg4_pos_x/mainWin_width, ...
        viewportResImg4_pos_y/mainWin_height, ...
        viewportResImg4_width, ...
        viewportResImg4_height];

    // Create label for result image viewport 1
    uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Result", ...
        "fontsize", 12, ...
        "horizontalAlignment", "center", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.0 0.0 0.0], ...
        "position", [(mainWin_width/2)+102 mainWin_height-30 288 20] );

    // Create label for result image viewport 2
    uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Result", ...
        "fontsize", 12, ...
        "horizontalAlignment", "center", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.0 0.0 0.0], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-40-(112*1) 288 20] );

    // Create label for result image viewport 3
    uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Result", ...
        "fontsize", 12, ...
        "horizontalAlignment", "center", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.0 0.0 0.0], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-50-(112*2) 288 20] );

    // Create label for result image viewport 4
    uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Result", ...
        "fontsize", 12, ...
        "horizontalAlignment", "center", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.0 0.0 0.0], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-60-(112*3) 288 20] );

    // Create label for result image name 1
    resImgName1 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Name: ???", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", [(mainWin_width/2)+102 mainWin_height-50 288 20] );

    // Create label for result image name 2
    resImgName2 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Name: ???", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-60-(112*1) 288 20] );

    // Create label for result image name 3
    resImgName3 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Name: ???", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", ....
        [(mainWin_width/2)+102 mainWin_height-70-(112*2) 288 20] );

    // Create label for result image name 4
    resImgName4 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Name: ???", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-80-(112*3) 288 20] );


    // Create label for result percentage matching 1
    resPercentMatch1 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Match: 0%", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", [(mainWin_width/2)+102 mainWin_height-70 288 20] );

    // Create label for result percentage matching 2
    resPercentMatch2 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Match: 0%", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-80-(112*1) 288 20] );

    // Create label for result percentage matching 3
    resPercentMatch3 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Match: 0%", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-90-(112*2) 288 20] );

    // Create label for result percentage matching 4
    resPercentMatch4 = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "string", "Match: 0%", ...
        "fontsize", 12, ...
        "horizontalAlignment", "left", ...
        "foreground", [1.0 1.0 1.0], ...
        "background", [0.3 0.3 0.3], ...
        "position", ...
        [(mainWin_width/2)+102 mainWin_height-100-(112*3) 288 20] );

    // Prepare a list of src images for the list box
    for i=1:1:40
    for j=1:1:10
        listSrcImg(((i-1)*10)+j) = ...
            msprintf("att_faces/orl_faces/s%d/%d.pgm", i, j);
    end
    end

    // Create listbox to choose src image
    listboxSrcImg = uicontrol( "parent", mainWin_handle, ...
        "style", "listbox", ...
        "string", listSrcImg, ...
        "value", 1, ...
        "position", [10+92 mainWin_height-112-10 288 112-20], ...
        "horizontalalignment", "left", ...
        "fontsize", 12, ...
        "background", [0.9 0.9 0.9], ...
        "callback", "loadSrcImg" );
    loadSrcImg();

    // Create button search
    uicontrol( "parent", mainWin_handle, ...
        "style", "pushbutton", ...
        "position", [290 mainWin_height-122-20 100 20], ...
        "string", "Search", ...
        "fontSize", 12, ...
        "backgroundColor", [1.0 1.0 1.0], ...
        "callback", "search_face" );

    // Create program state info (Not yet trained / Busy / Idle)
    progState = uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "position", [10 mainWin_height-122-20 280 20], ...
        "string", "Program State: Inactive", ...
        "horizontalAlignment", "left", ...
        "fontsize", 12, ...
        "foregroundColor", [1.0 1.0 1.0], ...
        "backgroundColor", [0.5 0.5 0.5] );

    // System and Eigenface Information label
    uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "foregroundColor", [1.0 1.0 1.0], ...
        "backgroundColor", [0.0 0.0 0.0], ...
        "string", "System and Eigenface Information", ...
        "fontsize", 12, ...
        "position", [10 mainWin_height-162-20 380 20] );

    // Prepare System and Eigenface Information data table
    sysinfo_row0 = [" " "Info" "Description"];
    sysinfo_col0 = ["1";"2";"3";"4"];
    sysinfo_data = [ ...
        "Technique used" "Eigenface"; ...
        "Number of persons" ...
        msprintf("%d (S1 until S%d)",numOfPerson,numOfPerson); ...
        "Number of face per persons" ...
        msprintf("%d (1.pgm until %d.pgm)", ...
            imagesPerPerson,imagesPerPerson); ...
        "Total number of faces" string(numOfFaces) ...
    ];

    // Create System and Eigenface Information table
    sysinfoTable = [sysinfo_row0; [sysinfo_col0 sysinfo_data]];
    sysinfoTable_handle = uicontrol( "parent", mainWin_handle, ...
        "style", "table", ...
        "string", sysinfoTable, ...
        "fontsize", 12, ...
        "foregroundColor", [1.0 1.0 1.0], ...
        "backgroundColor", [0.5 0.5 0.5], ...
        "position", [10 mainWin_height-182-100 380 100] );

    // Recognizer Analysis Information label
    uicontrol( "parent", mainWin_handle, ...
        "style", "text", ...
        "foregroundColor", [1.0 1.0 1.0], ...
        "backgroundColor", [0.0 0.0 0.0], ...
        "string", "Eigenface Recognizer Analysis", ...
        "fontsize", 12, ...
        "position", [10 mainWin_height-192-20-100 380 20] );

    // Prepare Eigenface Recognizer Analysis data table
    analysis_row0 = [" " " "];
    analysis_col0 = [" "];
    analysis_data = [" "];

    // Create Eigenface Recognizer Analysis table
    analysisTable = [analysis_row0; [analysis_col0 analysis_data]];
    analysisTable_handle = uicontrol( "parent", mainWin_handle, ...
        "style", "table", ...
        "string", analysisTable, ...
        "fontsize", 12, ...
        "foregroundColor", [1.0 1.0 1.0], ...
        "backgroundColor", [0.5 0.5 0.5], ...
        "position", [10 mainWin_height-312-178 380 178] );

    // Set Main Window's status bar message
    mainWin_handle.info_message = ...
        "Select any source image and press search button";

endfunction
